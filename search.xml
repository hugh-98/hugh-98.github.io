<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客教程(二)Hexo主题推荐</title>
      <link href="/2023/03/06/Hexo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%E4%BA%8C/"/>
      <url>/2023/03/06/Hexo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>Hexo博客默认的页面感觉太单调了，为了更好地美化个人博客，我们可以自己选择喜欢的主题。</p><p>Hexo推荐的主题有很多，都可以在<a href="https://hexo.io/themes/">官方网站</a>上查看。</p><p>本文主要讲一下推荐的主题，以及目前本人正在使用的主题。</p><h2 id="推荐主题">推荐主题</h2><h3 id="Butterfly">Butterfly</h3><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303061608546.png" alt="image-20230306102321551"  /><p>官网：<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><p>GitHub地址：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></p><h3 id="NexT">NexT</h3><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303061608547.png" alt="image-20230306102721008"></p><p>官网：<a href="https://theme-next.js.org/">https://theme-next.js.org/</a></p><p>GitHub地址：<a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a></p><h3 id="Icarus">Icarus</h3><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303061608548.png" alt="image-20230306103633570"></p><p>官网：<a href="https://ppoffice.github.io/hexo-theme-icarus/">https://ppoffice.github.io/hexo-theme-icarus/</a></p><p>GitHub地址：<a href="https://github.com/ppoffice/hexo-theme-icarus">https://github.com/ppoffice/hexo-theme-icarus</a></p><h3 id="Fluid">Fluid</h3><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303061608549.png" alt="image-20230306104439103"></p><p>官网：<a href="https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a></p><p>GitHub地址：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><h3 id="Volantis">Volantis</h3><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303061608550.png" alt="image-20230306104813452"></p><p>官网：<a href="https://volantis.js.org/">https://volantis.js.org/</a></p><p>GitHub地址：<a href="https://github.com/volantis-x/hexo-theme-volantis">https://github.com/volantis-x/hexo-theme-volantis</a></p><h3 id="Snippet">Snippet</h3><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303061608551.png" alt="image-20230306105139544"></p><p>官网：<a href="https://www.91h5.cc/?rf=gh-demo">https://www.91h5.cc/?rf=gh-demo</a></p><p>GitHub地址：<a href="https://github.com/shenliyang/hexo-theme-snippet">https://github.com/shenliyang/hexo-theme-snippet</a></p><h2 id="本文使用的主题Butterfly介绍">本文使用的主题Butterfly介绍</h2><p>本博客使用主题：<a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a></p><p>关于如何配置可以直接看官网即可，讲的非常详细了。</p><blockquote><p>注意：使用该主题后，以后若需改动配置，则只需要在<code>_config.butterfly.yml</code>进行配置，可以不用在<code> _config.yml</code>中配置。</p></blockquote><p>在butterfly中，本文已配置如下第三方的功能：</p><ul><li><a href="https://github.com/PaicHyperionDev/hexo-generator-search">本地搜索</a></li><li><a href="https://tongji.baidu.com/web/welcome/login">百度分析统计</a></li><li>KaTeX</li><li>字数统计</li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Hexo博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客教程(一)搭建Hexo博客</title>
      <link href="/2023/03/05/Hexo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%E4%B8%80/"/>
      <url>/2023/03/05/Hexo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>首先，本文目标是搭建一个完全免费的个人博客。</p><p>当然，免费也有一定的缺点，就是GitHub经常需要科学上网才能进入，不太方便。也有人用Gitee，没有科学上网的人也可以搜索网上的相关教程。</p><p><strong>本文主要使用框架：</strong></p><ul><li>Hexo</li><li>Github</li></ul><p>笔者使用的是Windows10系统，所以只讲该系统下的安装与使用。并且，本文在安装软件时直接使用科学上网下载安装，对于无法科学上网的人来说可能会存在一些问题，建议查看<a href="https://hexo.io/zh-cn/docs/index.html">Hexo官方文档</a></p><p>也可以参考这位<a href="https://www.bilibili.com/video/BV1Yb411a7ty">up主的视频</a></p><h2 id="环境安装">环境安装</h2><p>这一步其实也可以参考<a href="https://hexo.io/zh-cn/docs/index.html">Hexo官方文档</a></p><h3 id="安装Git">安装Git</h3><h4 id="去官网安装Git">去官网安装<a href="https://git-scm.com/download/win">Git</a></h4><p>一般现在都是64位的Windows系统，所以直接下载安装即可。（不会就搜教程）</p><h4 id="让Git与自己的GitHub账号绑定">让Git与自己的GitHub账号绑定</h4><ol><li>安装完成后即可在右击鼠标，打开Git Bash。或者在Windows的搜索框中搜索Git，即可看到</li></ol><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052208949.png" alt="image-20230305204033056" style="zoom: 80%;" /><ol start="2"><li>设置用户名与邮箱</li></ol><p>在Git Bash中输入以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>生成ssh密钥文件</li></ol><p>在Git Bash中输入以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>输入上述命令后，会有几个需要确认的问题，直接三个回车键即可。</p><ol start="4"><li>找到生成的密钥文件</li></ol><p>可以在Git Bash中输入以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh# 进入密钥文件所在文件夹</span><br><span class="line">cat id_rsa.pub# 打印出公钥，将打印出的内容全部复制</span><br></pre></td></tr></table></figure><ol start="5"><li>登录GitHub账号，在GitHub Setting中添加SSH Keys</li></ol><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052208951.png" alt="image-20230305205503008"></p><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052208952.png" alt="image-20230305205606025"></p><ol start="6"><li>测试是否绑定账号成功</li></ol><p>在Git Bash中输入以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果出现以下信息，即表示成功</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Hi xxx! You&#x27;ve successfully authenticated, xxx.</span><br></pre></td></tr></table></figure><h3 id="安装Node-js">安装Node.js</h3><p>Hexo基于Node.js，所以需要安装Node.js</p><p>在<a href="https://nodejs.org/zh-cn/download/">Node.js官网</a>上下载Node.js即可</p><p>下载并安装完成后，可以在命令行中输入以下命令检测是否安装成功：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>如果成功，则会显示Node.js的版本号</p><p>后面还需要使用npm，但是由于Node.js已经自带npm，所以不需要额外安装。可以使用以下命令检测电脑中是否有npm：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="安装Hexo">安装Hexo</h3><ol><li>在电脑中创建一个文件夹。Hexo框架以及以后发布的博客都存储在该文件夹中。</li><li>在该文件夹中，打开命令行，使用npm安装Hexo</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="3"><li>初始化博客。同目录下，输入：</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><hr/><p>通过以上命令即可将Hexo安装在本地。</p><p>下面就可以使用Hexo了。</p><h2 id="Hexo本地使用">Hexo本地使用</h2><h3 id="常用命令">常用命令</h3><p><strong>注：以下命令均在Hexo的安装目录下执行</strong></p><h3 id="创建博客">创建博客</h3><p>输入以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &quot;博客名&quot;</span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ol><li><p>创建的博客在Hexo安装路径下的<code>./source/_posts/</code>文件夹下。</p><p>也可以自己手动在该路径下创建文章，但是手动创建的文章不会自动加前言。</p><p><strong>所以，还是推荐使用命令创建新的博客</strong></p></li><li><p>生成的博客名后面默认有<code>.md</code>的后缀，所以最好学会写markdown形式的博客。（推荐使用<code>Typora</code>书写）</p></li></ol></blockquote><h3 id="生成静态文件">生成静态文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h3 id="本地部署Hexo">本地部署Hexo</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="本地部署流程">本地部署流程</h3><p>如果我们只是想将博客部署在本地电脑，则根据上述的命令，按照以下流程完成即可：</p><ol><li>创建博客</li><li>生成静态文件</li><li>本地部署Hexo</li></ol><p>部署后，最后在 <a href="http://localhost:4000">http://localhost:4000</a> 即可访问</p><h2 id="Hexo部署在GitHub">Hexo部署在GitHub</h2><p>如果要将Hexo部署在Github上，则还需接下来的操作。</p><h3 id="GitHub新建仓库">GitHub新建仓库</h3><ol><li>在GitHub上新建一个仓库</li></ol><p><strong>注意：这里仓库名一定要是<code>用户名.github.io</code></strong></p><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052208953.png" alt="image-20230305213100961"></p><ol start="2"><li>创建成功后，将仓库的ssh链接复制下来</li></ol><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052208954.png" alt="image-20230305213618837"></p><h3 id="修改配置文件">修改配置文件</h3><p>Hexo的配置内容都在安装路径下的<code>_config.yml</code>文件</p><p>在配置文件中，找到<code>deploy</code>的相关内容，将<code>type</code>填入<code>git</code>，<code>repo</code>填入上述复制的ssh链接，<code>branch</code>填入仓库对应的分支名。（注：现在默认分支应该是main吧，最好看清楚自己仓库的分支）</p><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052208955.png" alt="image-20230305213657883"></p><h3 id="远程部署">远程部署</h3><p>上述步骤都完成后，可以使用以下命令进行远程部署：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><blockquote><p>注：</p><p>在部署前，如果有改动，则需要先用以下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>然后，再使用远程部署的命令</p></blockquote><p>以后每次写出新文章就需要远程部署一次。</p><blockquote><p>建议每次远程部署前，先在本地部署预览一下，查看是否有问题，没问题在发布到GitHub上。</p></blockquote><h2 id="出现过的问题">出现过的问题</h2><h3 id="ssh端口不管用">ssh端口不管用</h3><p>在远程部署的时候，我使用的是github仓库链接是ssh的，所以需要22端口。有一次部署我发现，出现以下错误。从中可以看出，是因为无法读取远程仓库导致的。</p><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052226746.png" alt="image-20230305222433073"></p><p>排查问题的方法很简单，在Git Bash中使用以下命令，检测是否可以链接github</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>我当时就出现如下报错。所以可以肯定，是22端口无法使用导致的。</p><p><img src="https://raw.githubusercontent.com/hugh-98/PicGo/main/img/202303052226321.png" alt="image-20230305222554789"></p><p>究其原因，我发现是学校校园网将22端口屏蔽了，所以无法使用。只要换个网络即可。</p><h3 id="图片无法显示">图片无法显示</h3><p>目前依旧存在的问题：</p><p>由于我博客中主题的图片与文章中的图片都存在Github上，导致如果不使用科学上网，图片将无法显示。。。</p><p>难道这就是免费的缺点吗！呜呜呜呜</p><p>不知道怎么解决！！！求评论区大佬教教</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Hexo博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
